// Generated by typings
// Source: node_modules/@ngui/datetime-picker/dist/datetime.d.ts
declare module '~@ngui/datetime-picker/dist/datetime' {
/**
 * Static variables that you can override
 *   1. days.           default 1,2,....31
 *   2. daysOfWeek,     default Sunday, Monday, .....
 *   3. firstDayOfWeek, default 0 as in Sunday
 *   4. months,         default January, February
 *   5. formatDate(d)   default returns YYYY-MM-DD HH:MM
 *   6. parseDate(str)  default returns date from YYYY-MM-DD HH:MM
 */
export class NguiDatetime {
    static locale: any;
    static days: number[];
    static weekends: number[];
    static daysOfWeek: any[];
    static firstDayOfWeek: number;
    static months: any[];
    static formatDate(d: Date, format?: string, dateOnly?: boolean): string;
    static parseDate(dateStr: string, parseFormat?: string, dateFormat?: string): Date;
    static getWeekNumber(date: any): number;
    private static removeTimezone(dateStr);
    private static addDSTOffset(dateStr);
    private static parseFromDefaultFormat(dateStr);
    getMonthData(year: number, month: number): any;
}
}
declare module '@ngui/datetime-picker/dist/datetime' {
export * from '~@ngui/datetime-picker/dist/datetime';
}

// Generated by typings
// Source: node_modules/@ngui/datetime-picker/dist/datetime-picker.component.d.ts
declare module '~@ngui/datetime-picker/dist/datetime-picker.component' {
import { ElementRef, ChangeDetectorRef, EventEmitter } from '@angular/core';
import { NguiDatetime } from '~@ngui/datetime-picker/dist/datetime';
/**
 * show a selected date in monthly calendar
 */
export class NguiDatetimePickerComponent {
    nguiDatetime: NguiDatetime;
    cdRef: ChangeDetectorRef;
    dateFormat: string;
    dateOnly: boolean;
    timeOnly: boolean;
    selectedDate: Date;
    hour: number;
    minute: number;
    minuteStep: number;
    defaultValue: Date;
    minDate: Date;
    maxDate: Date;
    minHour: number;
    maxHour: number;
    disabledDates: Date[];
    showCloseButton: boolean;
    showCloseLayer: boolean;
    showWeekNumbers: boolean;
    showTodayShortcut: boolean;
    showAmPm: boolean;
    selected$: EventEmitter<any>;
    closing$: EventEmitter<any>;
    hours: ElementRef;
    minutes: ElementRef;
    el: HTMLElement;
    disabledDatesInTime: number[];
    locale: any;
    showYearSelector: boolean;
    private _monthData;
    private timeSuffix;
    constructor(elementRef: ElementRef, nguiDatetime: NguiDatetime, cdRef: ChangeDetectorRef);
    readonly yearsSelectable: number[];
    year: number;
    month: number;
    day: number;
    readonly monthData: any;
    today: Date;
    ngOnInit(): void;
    isWeekend(dayNum: number, month?: number): boolean;
    selectYear(year: any): void;
    toDate(day: number, month?: number): Date;
    toDateOnly(date: Date): Date;
    selectCurrentTime(): void;
    /**
     * set the selected date and close it when closeOnSelect is true
     * @param date {Date}
     */
    selectDateTime(date?: Date): boolean;
    /**
     * show prev/next month calendar
     */
    updateMonthData(num: number): void;
    isDateDisabled(date: Date): boolean;
    close(): void;
    selectToday(): void;
    private convertHours(hours);
}
}
declare module '@ngui/datetime-picker/dist/datetime-picker.component' {
export * from '~@ngui/datetime-picker/dist/datetime-picker.component';
}

// Generated by typings
// Source: node_modules/@ngui/datetime-picker/dist/datetime-picker.directive.d.ts
declare module '~@ngui/datetime-picker/dist/datetime-picker.directive' {
import { ComponentFactoryResolver, EventEmitter, OnChanges, OnInit, SimpleChanges, ViewContainerRef } from '@angular/core';
import { ControlContainer } from '@angular/forms';
/**
 * If the given string is not a valid date, it defaults back to today
 */
export class NguiDatetimePickerDirective implements OnInit, OnChanges {
    private resolver;
    private viewContainerRef;
    private parent;
    dateFormat: string;
    parseFormat: string;
    dateOnly: boolean;
    timeOnly: boolean;
    closeOnSelect: boolean;
    defaultValue: Date | string;
    minuteStep: number;
    minDate: Date | string;
    maxDate: Date | string;
    minHour: Date | number;
    maxHour: Date | number;
    disabledDates: Date[];
    showCloseLayer: boolean;
    showTodayShortcut: boolean;
    showWeekNumbers: boolean;
    formControlName: string;
    isDraggable: boolean;
    ngModel: any;
    ngModelChange: EventEmitter<{}>;
    valueChanged$: EventEmitter<{}>;
    popupClosed$: EventEmitter<{}>;
    private el;
    private nguiDatetimePickerEl;
    private componentRef;
    private ctrl;
    private sub;
    inputEl: HTMLInputElement;
    clickedDatetimePicker: boolean;
    userModifyingValue: boolean;
    constructor(resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, parent: ControlContainer);
    /**
     * convert defaultValue, minDate, maxDate, minHour, and maxHour to proper types
     */
    normalizeInput(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    handleKeyDown: (event: any) => void;
    ngOnChanges(changes: SimpleChanges): void;
    updateDatepicker(): void;
    setInputElDateValue(date: any): void;
    ngOnDestroy(): void;
    inputElValueChanged: (date: string | Date) => void;
    showDatetimePicker: (event?: any) => void;
    dateSelected: (date: any) => void;
    hideDatetimePicker: (event?: any) => any;
    private elementIn(el, containerEl);
    private styleDatetimePicker();
    private getDate;
    private drag_start;
    private drag_over(event);
    private drop;
}
}
declare module '@ngui/datetime-picker/dist/datetime-picker.directive' {
export * from '~@ngui/datetime-picker/dist/datetime-picker.directive';
}

// Generated by typings
// Source: node_modules/@ngui/datetime-picker/dist/datetime-picker.module.d.ts
declare module '~@ngui/datetime-picker/dist/datetime-picker.module' {
export class NguiDatetimePickerModule {
}
}
declare module '@ngui/datetime-picker/dist/datetime-picker.module' {
export * from '~@ngui/datetime-picker/dist/datetime-picker.module';
}

// Generated by typings
// Source: node_modules/@ngui/datetime-picker/dist/index.d.ts
declare module '~@ngui/datetime-picker/dist/index' {
import { NguiDatetime } from '~@ngui/datetime-picker/dist/datetime';
import { NguiDatetimePickerComponent } from '~@ngui/datetime-picker/dist/datetime-picker.component';
import { NguiDatetimePickerDirective } from '~@ngui/datetime-picker/dist/datetime-picker.directive';
import { NguiDatetimePickerModule } from '~@ngui/datetime-picker/dist/datetime-picker.module';
export { NguiDatetime, NguiDatetimePickerComponent, NguiDatetimePickerDirective, NguiDatetimePickerModule };
}
declare module '@ngui/datetime-picker/dist/index' {
export * from '~@ngui/datetime-picker/dist/index';
}
declare module '@ngui/datetime-picker' {
export * from '~@ngui/datetime-picker/dist/index';
}
